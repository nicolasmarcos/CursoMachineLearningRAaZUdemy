setwd("/media/n/6DEFCED45A78BAB8/workspace/Udemy/MachineLearningR/BaseRiscoCredito")
install.packages('e1071')
library(e1071)
base <- read.csv('risco-credito.csv')
View(base)
classificador <- naiveBayes(base[-5],base$risco)
View(classificador)
View(base)
teste_aprendizagem = data.frame(historia,divida,garantia,renda)
historia = c('boa')
divida = c('alta')
garantia = c('nenhuma')
renda = c('acima_35')
teste_aprendizagem = data.frame(historia,divida,garantia,renda)
View(teste_aprendizagem)
previsao = predict(classificador,newdata = teste_aprendizagem)
previsao = predict(classificador,newdata = teste_aprendizagem)
historia = c('boa')
divida = c('alta')
garantias = c('nenhuma')
renda = c('acima_35')
teste_aprendizagem = data.frame(historia,divida,garantia,renda)
previsao = predict(classificador,newdata = teste_aprendizagem)
historia = c('boa')
divida = c('alta')
garantias = c('nenhuma')
renda = c('acima_35')
teste_aprendizagem = data.frame(historia,divida,garantias,renda)
previsao = predict(classificador,newdata = teste_aprendizagem)
print(previsao)
previsao = predict(classificador,newdata = teste_aprendizagem,'raw')
print(previsao)
historia = c('boa')
divida = c('alta')
garantias = c('nenhuma')
renda = c('acima_35')
teste_aprendizagem = data.frame(historia,divida,garantias,renda)
previsao = predict(classificador,newdata = teste_aprendizagem,'raw')
print(previsao)
historia = c('ruim')
divida = c('alta')
garantias = c('adequada')
renda = c('0_15')
teste_aprendizagem_laplaciana = data.frame(historia,divida,garantias,renda)
previsao = predict(classificador,newdata = teste_aprendizagem_laplaciana,'raw')
print(previsao)
previsao = predict(classificador,newdata = teste_aprendizagem_laplaciana)
print(previsao)
setwd("/media/n/6DEFCED45A78BAB8/workspace/Udemy/MachineLearningR/BaseRiscoCredito")
base <- read.csv('risco-credito.csv')
install.packages(rpart)
install.packages('rpart')
install.packages('rpart.plot')
library(rpart)
library(rpart.plot)
View(base)
classificador <- rpart(formula = risco ~ . ,data = base, control = rpart.control(minbucket = 1))
text(classificador)
print(classificador)
plot(classificador)
text(classificador)
rpart.plot(classificador)
df_teste = data_frame(historia, divida, garantias, renda)
df_teste = data.frame(historia, divida, garantias, renda)
previsoes = predict(classificador, df_teste)
print(previsoes)
previsoes = predict(classificador, new_data = df_teste)
print(previsoes)
previsoes = predict(classificador, newdata = df_teste)
print(previsoes)
print(df_teste)
historia = c('boa','ruim')
divida = c('alta','alta')
garantias = c('nenhuma','adequada')
renda = c('acima_35','0_15' )
df_teste = data.frame(historia, divida, garantias, renda)
print(df_teste)
previsoes = predict(classificador, newdata = df_teste)
print(previsoes)
